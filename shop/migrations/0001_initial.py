# Generated by Django 3.1.5 on 2021-01-13 06:43

import ckeditor_uploader.fields
from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import taggit.managers


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
        ('taggit', '0003_taggeditem_add_unique_index'),
    ]

    operations = [
        migrations.CreateModel(
            name='CustomUser',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('user_type', models.CharField(choices=[(1, 'Owner'), (2, 'Seller'), (3, 'Customer'), (4, 'Delivery')], default=1, max_length=10)),
                ('email', models.EmailField(max_length=254, unique=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(db_index=True, max_length=200)),
                ('slug', models.SlugField(max_length=200, unique=True)),
                ('image', models.ImageField(blank=True, upload_to='category')),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'category',
                'verbose_name_plural': 'categories',
                'ordering': ('name',),
            },
        ),
        migrations.CreateModel(
            name='Customer',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('number', models.BigIntegerField(null=True)),
                ('Temporary_address', models.CharField(max_length=300)),
                ('street', models.CharField(max_length=200)),
                ('District', models.CharField(max_length=50)),
                ('profile_pic', models.ImageField(blank=True, upload_to='Customer_Profile')),
                ('gender', models.CharField(choices=[('Male', 'Male'), ('Female', 'Female')], max_length=100)),
                ('admin', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Service',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('service_name', models.CharField(max_length=200)),
                ('slug', models.SlugField(max_length=200, unique=True)),
                ('image', models.ImageField(blank=True, upload_to='services')),
            ],
            options={
                'verbose_name': 'service',
                'verbose_name_plural': 'services',
                'ordering': ('service_name',),
            },
        ),
        migrations.CreateModel(
            name='Sub_Category',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sub_name', models.CharField(max_length=200)),
                ('slug', models.SlugField(max_length=200, unique=True)),
                ('image', models.ImageField(blank=True, upload_to='sub-category')),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='shop.category')),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'sub_category',
                'verbose_name_plural': 'sub_categories',
                'ordering': ('sub_name',),
            },
        ),
        migrations.CreateModel(
            name='Shop',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('shop_name', models.CharField(max_length=200)),
                ('VAT', models.CharField(max_length=300)),
                ('address', models.CharField(max_length=200)),
                ('shop_number', models.BigIntegerField()),
                ('shop_owner', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Seller',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('number', models.BigIntegerField(null=True)),
                ('Temporary_address', models.CharField(max_length=300)),
                ('street', models.CharField(max_length=200)),
                ('District', models.CharField(choices=[('Taplejung', 'Taplejung'), ('Panchthar', 'Panchthar'), ('Ilam', 'Ilam'), ('Jhapa', 'Jhapa'), ('Morang', 'Morang'), ('Sunsari', 'Sunsari'), ('Dhankutta', 'Dhankutta'), ('Sankhuwasabha', 'Sankhuwasabha'), ('Bhojpur', 'Bhojpur'), ('Okhaldunga', 'Okhaldunga'), ('Khotang', 'Khotang'), ('Solukhumbu', 'Solukhumbu'), ('Udaypur', 'Udaypur'), ('Saptari', 'Saptari'), ('Siraha', 'Siraha'), ('Dhanusa', 'Dhanusa'), ('Mahottari', 'Mahottari'), ('Sarlahi', 'Sarlahi'), ('Sindhuli', 'Sindhuli'), ('Ramechhap', 'Ramechhap'), ('Dolkha', 'Dolkha'), ('Sindhupalchauk', 'Sindhupalchauk'), ('Kavreplanchauk', 'Kavreplanchauk'), ('Lalitpur', 'Lalitpur'), ('Bhaktapur', 'Bhaktapur'), ('Kathmandu', 'Kathmandu'), ('Nuwakot', 'Nuwakot'), ('Rasuwa', 'Rasuwa'), ('Dhading', 'Dhading'), ('Makwanpur', 'Makwanpur'), ('Rauthat', 'Rauthat'), ('Parsa', 'Parsa'), ('Chitwan', 'Chitwan'), ('Gorkha', 'Gorkha'), ('Lamjung', 'Lamjung'), ('Tanahun', 'Tanahun'), ('Syangja', 'Syangja'), ('Kaski', 'Kaski'), ('Manag', 'Manag'), ('Mustang', 'Mustang'), ('Parwat', 'Parwat'), ('Myagdi', 'Myagdi'), ('Baglung', 'Baglung'), ('Gulmi', 'Gulmi'), ('Palpa', 'Palpa'), ('Nawalparasi', 'Nawalparasi'), ('Rupandehi', 'Rupandehi'), ('Arghakhanchi', 'Arghakhanchi'), ('Kapilvastu', 'Kapilvastu'), ('Pyuthan', 'Pyuthan'), ('Rukum', 'Rukum'), ('Rolpa', 'Rolpa'), ('Salyan', 'Salyan'), ('Dang', 'Dang'), ('Bardiya', 'Bardiya'), ('Surkhet', 'Surkhet'), ('Dailekh', 'Dailekh'), ('Banke', 'Banke'), ('Jajarkot', 'Jajarkot'), ('Dolpa', 'Dolpa'), ('Humla', 'Humla'), ('Kalikot', 'Kalikot'), ('Mugu', 'Mugu'), ('Jumla', 'Jumla'), ('Bajura', 'Bajura'), ('Bajhang', 'Bajhang'), ('Achham', 'Achham'), ('Doti', 'Doti'), ('Kailali', 'Kailali'), ('Kanchanpur', 'Kanchanpur'), ('Dadeldhura', 'Dadeldhura'), ('Baitadi', 'Baitadi'), ('Darchula', 'Darchula')], default='Kathmandu', max_length=50)),
                ('profile_pic', models.ImageField(blank=True, upload_to='Seller_Profile')),
                ('gender', models.CharField(choices=[('Male', 'Male'), ('Female', 'Female')], default='Male', max_length=100)),
                ('KYC', models.ImageField(blank=True, upload_to='KYC')),
                ('verified', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now_add=True)),
                ('admin', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Owner',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('address', models.CharField(max_length=200)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now_add=True)),
                ('admin', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Delivery_address',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('fullname', models.CharField(max_length=200)),
                ('number', models.BigIntegerField(null=True)),
                ('region', models.CharField(max_length=30)),
                ('city', models.CharField(max_length=100)),
                ('address', models.CharField(max_length=100)),
                ('Area', models.CharField(max_length=100)),
                ('master', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='deliveryaddress', to='shop.customer')),
            ],
        ),
        migrations.CreateModel(
            name='Delivery',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('fullname', models.CharField(max_length=300)),
                ('country', models.CharField(default='Nepal', max_length=60)),
                ('number', models.BigIntegerField(null=True)),
                ('district', models.CharField(default='Kathmandu', max_length=100)),
                ('province', models.CharField(max_length=200, null=True)),
                ('ward_no', models.IntegerField()),
                ('street', models.CharField(max_length=200)),
                ('profile_pic', models.ImageField(blank=True, upload_to='Vendor_Profile')),
                ('gender', models.CharField(choices=[('Male', 'Male'), ('Female', 'Female')], default='Male', max_length=100)),
                ('DOB', models.DateField(null=True)),
                ('vechile_no', models.CharField(max_length=200)),
                ('vechile_color', models.CharField(max_length=200)),
                ('vechile_name', models.CharField(max_length=200)),
                ('license_no', models.CharField(max_length=400)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now_add=True)),
                ('permanent_country', models.CharField(max_length=200, null=True)),
                ('permanent_district', models.CharField(max_length=200, null=True)),
                ('permanent_address', models.CharField(max_length=200, null=True)),
                ('permanent_muncipalicity', models.CharField(max_length=200, null=True)),
                ('permanent_ward', models.CharField(max_length=200, null=True)),
                ('permanent_tole', models.CharField(max_length=200, null=True)),
                ('admin', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.AddField(
            model_name='category',
            name='service',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='shop.service'),
        ),
        migrations.CreateModel(
            name='Product',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(db_index=True, max_length=200)),
                ('slug', models.SlugField(max_length=200)),
                ('short', models.CharField(blank=True, max_length=400, null=True)),
                ('commision', models.IntegerField(blank=True, null=True)),
                ('discount', models.IntegerField(blank=True, null=True)),
                ('tax', models.IntegerField(blank=True, null=True)),
                ('image', models.ImageField(blank=True, upload_to='products/%Y/%m/%d')),
                ('description', ckeditor_uploader.fields.RichTextUploadingField()),
                ('price', models.DecimalField(decimal_places=2, max_digits=20)),
                ('available_quantity', models.IntegerField(default=1)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now_add=True)),
                ('available', models.BooleanField(default=True)),
                ('insurance', models.BooleanField(default=False)),
                ('cashpayment', models.BooleanField(default=False)),
                ('features', models.BooleanField(default=False)),
                ('SKU', models.BigIntegerField(null=True)),
                ('sale', models.CharField(choices=[('HotSale', 'Hot Sale'), ('FlashSale', 'Flash Sale'), ('ExclusiveSale', 'Exclusive Sale'), ('Normal', 'Normal')], default='Normal', max_length=200)),
                ('sponsor', models.BooleanField(default=False)),
                ('variant', models.CharField(choices=[('None', 'None'), ('Size', 'Size'), ('Color', 'Color'), ('Size-Color', 'Size-Color')], default='None', max_length=10)),
                ('allovernepal', models.BooleanField(default=False)),
                ('added_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='added_by_user', to=settings.AUTH_USER_MODEL)),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='products', to='shop.category')),
                ('from_shop', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='fromshop', to='shop.shop')),
                ('sub_category', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='sub_category', to='shop.sub_category')),
                ('tags', taggit.managers.TaggableManager(help_text='A comma-separated list of tags.', through='taggit.TaggedItem', to='taggit.Tag', verbose_name='Tags')),
            ],
            options={
                'ordering': ('name',),
                'index_together': {('id', 'slug')},
            },
        ),
    ]
